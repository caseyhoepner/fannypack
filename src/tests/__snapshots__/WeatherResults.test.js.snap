// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WeatherResults WeatherResults Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeatherResults
    isLoaded={true}
    weatherData={
      Array [
        Object {
          "city": "Denver",
          "day": 1,
          "highTemp": 70,
          "icon": "rain-clouds.svg",
          "lowTemp": 50,
          "summary": "Mostly cloudy.",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <div
          className="wr-container"
        >
          <withRouter(Connect(WeatherCard))
            city="Denver"
            day={1}
            highTemp={70}
            icon="rain-clouds.svg"
            lowTemp={50}
            summary="Mostly cloudy."
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <withRouter(Connect(WeatherCard))
              city="Denver"
              day={1}
              highTemp={70}
              icon="rain-clouds.svg"
              lowTemp={50}
              summary="Mostly cloudy."
            />,
          ],
          "className": "wr-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "city": "Denver",
              "day": 1,
              "highTemp": 70,
              "icon": "rain-clouds.svg",
              "lowTemp": 50,
              "summary": "Mostly cloudy.",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <div
            className="wr-container"
          >
            <withRouter(Connect(WeatherCard))
              city="Denver"
              day={1}
              highTemp={70}
              icon="rain-clouds.svg"
              lowTemp={50}
              summary="Mostly cloudy."
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <withRouter(Connect(WeatherCard))
                city="Denver"
                day={1}
                highTemp={70}
                icon="rain-clouds.svg"
                lowTemp={50}
                summary="Mostly cloudy."
              />,
            ],
            "className": "wr-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "city": "Denver",
                "day": 1,
                "highTemp": 70,
                "icon": "rain-clouds.svg",
                "lowTemp": 50,
                "summary": "Mostly cloudy.",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`WeatherResults WeatherResults Component should match the snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeatherResults
    isLoaded={false}
    weatherData={
      Array [
        Object {
          "city": "Denver",
          "day": 1,
          "highTemp": 70,
          "icon": "rain-clouds.svg",
          "lowTemp": 50,
          "summary": "Mostly cloudy.",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <div
          className="wr-container"
        >
          <section
            className="wr-loading-container"
          >
            <img
              className="wr-suitcase"
              src="suitcase.svg"
            />
            <div
              className="typewriter"
            >
              <h1>
                Compiling your packing lists...
              </h1>
            </div>
          </section>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <section
            className="wr-loading-container"
          >
            <img
              className="wr-suitcase"
              src="suitcase.svg"
            />
            <div
              className="typewriter"
            >
              <h1>
                Compiling your packing lists...
              </h1>
            </div>
          </section>,
          "className": "wr-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                className="wr-suitcase"
                src="suitcase.svg"
              />,
              <div
                className="typewriter"
              >
                <h1>
                  Compiling your packing lists...
                </h1>
              </div>,
            ],
            "className": "wr-loading-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "wr-suitcase",
                "src": "suitcase.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  Compiling your packing lists...
                </h1>,
                "className": "typewriter",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Compiling your packing lists...",
                },
                "ref": null,
                "rendered": "Compiling your packing lists...",
                "type": "h1",
              },
              "type": "div",
            },
          ],
          "type": "section",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <div
            className="wr-container"
          >
            <section
              className="wr-loading-container"
            >
              <img
                className="wr-suitcase"
                src="suitcase.svg"
              />
              <div
                className="typewriter"
              >
                <h1>
                  Compiling your packing lists...
                </h1>
              </div>
            </section>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <section
              className="wr-loading-container"
            >
              <img
                className="wr-suitcase"
                src="suitcase.svg"
              />
              <div
                className="typewriter"
              >
                <h1>
                  Compiling your packing lists...
                </h1>
              </div>
            </section>,
            "className": "wr-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  className="wr-suitcase"
                  src="suitcase.svg"
                />,
                <div
                  className="typewriter"
                >
                  <h1>
                    Compiling your packing lists...
                  </h1>
                </div>,
              ],
              "className": "wr-loading-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "wr-suitcase",
                  "src": "suitcase.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                    Compiling your packing lists...
                  </h1>,
                  "className": "typewriter",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Compiling your packing lists...",
                  },
                  "ref": null,
                  "rendered": "Compiling your packing lists...",
                  "type": "h1",
                },
                "type": "div",
              },
            ],
            "type": "section",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
